import capos.*

describe "Rolando" {
  test "Mochila de Rolando" {
    rolando.encontrarArtefacto(espadaDelDestino)
    rolando.encontrarArtefacto(libroDeHechizos)
    assert.throwsException({ rolando.encontrarArtefacto(collarDivino) })
    assert.equals(#{espadaDelDestino, libroDeHechizos}, rolando.mochila())
  }
  test "Castillo de Piedra" {
    rolando.encontrarArtefacto(espadaDelDestino)
    rolando.encontrarArtefacto(libroDeHechizos)
    rolando.volverAlCastillo()
    rolando.encontrarArtefacto(collarDivino)
    rolando.volverAlCastillo()
    assert.equals(#{espadaDelDestino,libroDeHechizos,collarDivino}, 
                    castilloDePiedra.coleccion()) 
  }
  test "Artefactos de Rolando" {
    castilloDePiedra.coleccion().add(collarDivino)
    castilloDePiedra.coleccion().add(espadaDelDestino)
    rolando.mochila().add(armaduraDeAceroValyrio)
    assert.equals(#{collarDivino,espadaDelDestino,armaduraDeAceroValyrio}, 
                    rolando.verPosesiones())
    assert.that(rolando.tengoElArtefacto(collarDivino))
  }
  test "Historia de los Artefactos" {
    rolando.encontrarArtefacto(espadaDelDestino)
    rolando.encontrarArtefacto(libroDeHechizos)
    assert.throwsException({ rolando.encontrarArtefacto(collarDivino) })
    rolando.volverAlCastillo()
    rolando.encontrarArtefacto(armaduraDeAceroValyrio)
    rolando.encontrarArtefacto(collarDivino)
    assert.equals([espadaDelDestino, libroDeHechizos, collarDivino, armaduraDeAceroValyrio, collarDivino],
                 rolando.historiaDeArtefactos())
  }
}

describe "Mensajes con Bloques" {
  test "Comportamiento de los Artefactos" {
    rolando.poderBase(5)
    rolando.espacioLimite(3)
    rolando.mochila().addAll(#{espadaDelDestino, armaduraDeAceroValyrio, collarDivino})
    rolando.pelearBatalla()
    assert.equals(18, rolando.poderDePelea())
    rolando.pelearBatalla()
    assert.equals(21.5, rolando.poderDePelea())
    rolando.pelearBatalla()
     assert.equals(24, rolando.poderDePelea())
  }
  test "Libro de Hechizos" {
    rolando.poderBase(5)
    rolando.mochila().add(libroDeHechizos)
    castilloDePiedra.coleccion().addAll(#{espadaDelDestino, armaduraDeAceroValyrio, collarDivino})
    libroDeHechizos.hechizos().addAll([bendicion, invisibilidad, invocacion])

    assert.equals(4, libroDeHechizos.poder(rolando))
    rolando.pelearBatalla()
    assert.equals(6, libroDeHechizos.poder(rolando))
    rolando.pelearBatalla()
    assert.equals(7, libroDeHechizos.poder(rolando))
    rolando.pelearBatalla()
    assert.equals(0, libroDeHechizos.poder(rolando))
  }
  test "Enemigos" {
    erethia.enemigos().addAll(#{caterina, archibaldo, astra})

    assert.equals(28, caterina.poderDePelea())
    assert.equals(fortalezaDeAcero, caterina.casa())
    assert.equals(16, archibaldo.poderDePelea())
    assert.equals(palacioDeMarmol, archibaldo.casa())
    assert.equals(14, astra.poderDePelea())
    assert.equals(torreDeMarfil, astra.casa())

    rolando.poderBase(5)
    rolando.espacioLimite(3)
    rolando.mochila().addAll(#{espadaDelDestino, armaduraDeAceroValyrio, collarDivino})
    assert.that(rolando.puedeVencerA(archibaldo))
    assert.that(rolando.puedeVencerA(astra))
    assert.equals([palacioDeMarmol, torreDeMarfil], rolando.moradasConquistables(erethia))

  }
  test "Poderoso" {
erethia.enemigos().addAll(#{caterina, archibaldo, astra})

    assert.equals(28, caterina.poderDePelea())
    assert.equals(fortalezaDeAcero, caterina.casa())
    assert.equals(16, archibaldo.poderDePelea())
    assert.equals(palacioDeMarmol, archibaldo.casa())
    assert.equals(14, astra.poderDePelea())
    assert.equals(torreDeMarfil, astra.casa())

    rolando.poderBase(5)
    rolando.espacioLimite(3)
    rolando.mochila().addAll(#{espadaDelDestino, armaduraDeAceroValyrio, collarDivino})

    assert.notThat(rolando.esPoderoso(erethia))

    rolando.poderBase(10)
    assert.that(rolando.esPoderoso(erethia))
  }
  test "Artefacto Fatal" {
    assert.that(rolando.hayArtefactoFatalPara(enemigo))
    

  }
}